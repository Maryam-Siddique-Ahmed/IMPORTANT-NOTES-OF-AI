{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\f0\fs48                \ul BUILDING OF AI PROJECTS \par
\fs44 INTRODUCTION\par
 \ulnone\fs32 Welcome back. Last week you learned about the basics of AI and machine learning technology. But how do you use this technology in a project, either if you want to do a project in your proverbial garage or if you want to do your project in a bigger company, or maybe even have something that builds up to align with your corporate strategy? Let's take a look. First, in this week you learn what is the workflow of an AI project. Different projects have different steps. So, just as a birthday party has a sequence of predictable steps. First, you figure out the guest list, and you find a venue, then you order the birthday cake, and send invites, and so on. So, too does an AI project have a sequence of predictable steps. So, through this, you learn what is the workflow of an AI project, you learn what it feels like to be working on an AI project. Second, how do you select an AI project? Seems there are a lot of things you could do. The second thing you learned this week is a framework for brainstorming and selecting potentially promising projects to work on, either by yourself or with a few friends, or as part of a bigger company effort. Finally, you also learn how to organize the data as well as the team, which again could be just you are a few friends or much bigger corporate team. We learn how to organize the data and team for executing on an AI project. By the end of the week, you know what it feels like and how to build your own AI project, and maybe you'll be able to start exploring with some of your friends promising ideas to try. Let's go on to the next video \par
\ul Workflow of a machine learning project\par
 \ulnone Machine learning algorithms can learn input to output or A to B mappings. So, how do you build a machine learning project? In this video, you'll learn what is the workflow of machine learning projects. Let's take a look. As a running example, I'm going to use speech recognition. So, some of you may have an Amazon Echo or Google Home or Apple Siri device or a Baidu DuerOS device in your homes. Some years back, I've done some work on Google's speech recognition system that also led Baidu's DuerOS project. Today, I actually have a Amazon Echo in my kitchen. So, every time I'm boiling an egg I will say, "Alexa, set timer for three minutes," and then it lets me know when the three minutes are up and my eggs are ready. So, how do you build a speech recognition system that can recognize when you say, "Alexa," or "Hey, Google," or "Hey, Siri," or "Hello, Baidu"? Let's go through the key steps of a machine learning project. Just for simplicity, I'm going to use Amazon Echo or detecting the Alexa keywords as this running example. If you want to build an AI system or build a machine learning system to figure out when a user has said the word Alexa, the first step is to collect data. So, that means, you would go around and get some people to say the word "Alexa" for you and you record the audio of that. You'll also get a bunch of people to say other words like "Hello," or say lots of other words and record the audio of that as well. Having collected a lot of audio data, a lot of these audio clips of people saying either "Alexa" or saying other things, step two is to then train the model. This means you will use a machine learning algorithm to learn an input to output or A to B mapping, where the input A would be an audio clip. In the case of the first audio clip above, hopefully, it will tell you that the user said "Alexa," and in the case of audio clip two, shown on the right, hopefully, the system will learn to recognize that the user has said "Hello." Whenever an AI team starts to train the model, meaning to learn the A to B or input-output mapping, what happens, pretty much every time, is the first attempt doesn't work well. So invariably, the team will need to try many times or in AI, we call this iterate many times. You have to iterate many times until, hopefully, the model looks like is good enough. The third step is to then actually deploy the model. What that means is you put this AI software into an actual smart speaker and ship it to either a small group of test users or to a large group of users. What happens in a lot of AI products is that when you ship it, you see that it starts getting new data and it may not work as well as you had initially hoped. So, for example, I am from the UK. So, I'm going to pick on the British. But let's say you had trained your speech recognition system on American-accented speakers and you then ship this smart speaker to the UK and you start having British-accented people say "Alexa." They may find that it doesn't recognize the speech as well as you had hoped. When that happens, hopefully, you can get data back of cases such as maybe British-accented speakers was not working as well as you're hoping, and then use this data to maintain and to update the model. So, to summarize, the key steps of a machine learning project are to collect data, to train the model, the A to B mapping, and then to deploy the model. Throughout these steps, there is often a lot of iteration, meaning fine-tuning or adapting the model to work better or getting data back even after you've shipped it to, hopefully, make the product better, which may or may not be possible depending on whether you're able to get data back. Let's look at these three steps and see how they apply on a different project on building a key component of a self-driving car. So, remember the key steps, you collect data, you train model, deploy model, since we'll revisit these steps on the next slide. Let's say you're building a self-driving car. One of the key components of a self-driving car is a machine learning algorithm that takes as input, say a picture, of what's in front of your car and tells you where are the other cars. So, what's the first step of building this machine learning system? Hopefully, you remember from the last slide that the first step was to collect data. So, if your goal is to have a machine learning algorithm that can take as input an image and output the position of other cars, the data you would need to collect would be both images as well as position of other cars that you want the AI system to output. So, let's say you start off with a few pictures like this. These are the inputs A to the machine learning algorithm. You need to also tell it what is the output B you would want. So, for each of these pictures, you would draw a rectangle around the cars in the picture that you wanted to detect. On this slide, I'm hand drawing these rectangles, but in practice, you will use some software that lets you draw perfect rectangles rather than these hand-drawn ones. Then, having created this dataset, what was the second step? Hope you remember that the second step was to train the model. Now, invariably, when your AI engineers start training a model, they'll find, initially, that it doesn't work that well. For example, given this picture, maybe the software, the first few tries, thinks that that is a car. It's only by iterating many times that you, hopefully, get a better result when figuring out that that is where the car actually is. Finally, what was the third step? It was to deploy the model. Of course, in the self-driving world, it's important to treat safety as number one, and deploy model or to test the model only in ways that can preserve safety. But when you put the software in cars on the road, you may find that there are new types of vehicles, say golf carts, that the software isn't detecting very well. So, you get data back, say, pictures of these golf carts, using new data to maintain and update the model so that, hopefully, you can have your AI software continually get better and better to the point where you end up with a software that can do a pretty good job detecting other cars from pictures like these. In this video, you learned what are the key steps of a machine learning project, which are to collect data, to train the model, and then to deploy the model. Next, let's take a look at what are the key steps or what is a workflow of a data science project. Let's go on to the next video \par
\ul\fs40 Workflow of a data science project; \par
\ulnone\fs32 Unlike a machine learning project, the output of a data science project is often a set of actionable insights, a set of insights that may cause you to do things differently. So, data science projects have a different workflow than machine learning projects. Let's take a look at one of the steps of a data science project. As our running example, let's say you want to optimize a sales funnel. Say you run a e-commerce or a online shopping website that sells coffee mugs and so for a user to buy a coffee mug from you, there's a sequence of steps they'll usually follow. First, they'll visit your website and take a look at the different coffee mugs on offer, then eventually, they have to get to a product page, and then they'll have to put it into their shopping cart, and go to the shopping cart page, and then they'll finally have to check out. So, if you want to optimize the sales funnel to make sure that as many people as possible get through all of these steps, how can you use data science to help with this problem? Let's look at the key steps of a data science project. The first step is to collect data. So, on a website like the one we saw, you may have a data set that stores when different users go to different web pages. In this simple example, I'm assuming that you can figure out the country that the users are coming from, for example, by looking at their computers' address, called an IP address, and figuring out what is the country from which they're originating. But in practice, you can usually get quite a bit more data about users than just what country they're from. The second step is to then analyze the data. Your data science team may have a lot of ideas about what is affecting the performance of your sales funnel. For example, they may think that overseas customers are scared off by the international shipping costs which is why a lot of people go to the checkout page but don't actually check out. If that's true then you might think about whether to put part of shipping costs into the actual product costs or your data science team may think there are blips in the data whenever there's a holiday. Maybe more people will shop around the holidays because they're buying gifts or maybe fewer people will shop around the holidays because they're staying home rather than sometimes shopping from their work computers. In some countries, there may be time-of-day blips where in countries that observe a siesta, so a time of rest like an afternoon rest, there may be fewer shoppers online and so your sales may go down. They may then suggest that you should spend fewer advertising dollars during the period of siesta because fewer people will go online to buy at that time. So, a good data science team may have many ideas and so they try many ideas or will say iterate many times to get good insights. Finally, the data science team will distill these insights down to a smaller number of hypotheses about ideas of what could be going well and what could be going poorly as well as a smaller number of suggested actions such as incorporating shipping costs into the product costs rather than having it as a separate line item. When you take some of these suggested actions and deploy these changes to your website, you then start to get new data back as users behave differently now that you advertise differently at the time of siesta or have a different check out policy. Then your data science team can continue to collect data and we analyze the new data periodically to see if they can come up with even better hypotheses or even better actions over time. So the key steps of a data science project are to collect the data, to analyze the data, and then to suggest hypotheses and actions, and then to continue to get the data back and reanalyze the data periodically. Let's take this framework and apply it to a new problem, to optimizing a manufacturing line. So we'll take these three steps and use them on the next slide as well. Let's say you run a factory that's manufacturing thousands of coffee mugs a month for sale and you want to optimize the manufacturing line. So, these are the key steps in manufacturing coffee mugs. Step one is to mix the clay, so make sure the appropriate amount of water is added. Step two is take this clay and to shape the mugs. Then you have to add the glaze, so add the coloring, a protective cover. Then you have to heat this mug and we call that firing the kiln. Finally, you would inspect the mug to make sure there aren't dents in the mug and it isn't cracked before you ship it to customers. So, a common problem in manufacturing is to optimize the yield of this manufacturing line to make sure that as few damaged coffee mugs get produced as possible because those are coffee mugs you have to throw away, resulting in time and material waste. What's the first step of a data science project? I hope you remember from the last slide that the first step is to collect data. So for example, you may save data about the different batches of clay that you've mixed, such as who supplied the clay and how long did you mix it, or maybe how much moisture was in the clay, how much water did you add. You might also collect data about the different batches of mugs you made. So how much humidity was in that batch? What was the temperature in the kiln and how long did you fire it in the kiln? Given all this data you would then ask the data science team to analyze the data and they would, as before, iterate many times to get good insights. So, they may find that, for example, that whenever the humidity is too low and the kiln temperature is too hot that there are cracks in the mug or they may find out that because it's warmer in the afternoon that you need to adjust the humidity and temperature depending on the time of day. Based on the insights from your data science team you get suggestions for hypotheses and actions on how to change the operations and manufacturing line in order to improve the productivity of the line. When you deploy the changes, you then get new data back that you can reanalyze periodically so they can keep on optimizing the performance of your manufacturing line. To summarize, the key steps of a data science project are to collect the data, to analyze the data, and then to suggest hypotheses and actions. In this video and the last video you saw some examples of machine learning projects and data science projects. It turns out that machine learning and data science are affecting almost every single job function. What I want to do in the next video is show you how these ideas are affecting many job functions, including perhaps yours and certainly that of many of your colleagues. Let's go on to the next video \par
\ul\fs48 Every job function needs to learn how to use data  \par
\ulnone\fs36 Data is transforming many different job functions, whether you work in recruiting or sales or marketing or manufacturing or agriculture, data is probably transforming your job function. What's happened in the last few decades is the digitization of our society. So, rather than handing out papers surveys like these, surveys are more likely to be done in digital format or doctors still write some handwritten notes but doctors handwritten note is increasingly likely to be a digital record and so to this in just about every single job function. This availability of data means that there's a good chance that your job function could be helped with tools like data science or machine learning. Let's take a look. In this video, I want to run through many different job functions and discuss how data science and machine learning can or will impact these different types of jobs. Let's start with sales. You've already seen in the last video how data science can be used to optimize a sales funnel. How about machine learning? If you're a salesperson you may have a set of leads about different people that you could reach out to to convince them to buy something from your company. Machine learning can help you prioritize these leads. So, you might want to prioritize calling up the CEO of a large company rather than the intern at a much smaller company and this type of automated leads sorting is making salespeople more efficient. Let's look at more examples. Let say you're manufacturing line manager. You've already seen how data science can help you optimize a manufacturing line. How about machine learning? One of the steps of this manufacturing process is the final inspection. In fact today, in many factories there can be hundreds or thousands of people using the human eye to check over objects, maybe coffee mugs, maybe other things to see if they're scratches or dents and that's called inspection. So, machine learning can take this input, a dataset like this, and learn to automatically figure out if a coffee mug is defective or not. By automatically finding scratches or dents, it can reduce labor costs and also improve quality in your factory. This type of automated visual inspection is one of the technologies that I think will have a big impact on manufacturing. This is something I've been working on myself as well. Let's see more examples. How about recruiting? When recruiting someone to join your company, there may be a pretty predictable sequence of steps where your recruiter or someone else would send an email to a candidate and then you'd have a phone call with them, bring them on-site for an interview and then extend an offer and maybe close the offer. Similar to how data science can be used to optimize a sales funnel, recruiting can also use data science to optimize a recruiting funnel and in fact many recruiting organizations are doing so today. For example, if you find that hardly anyone is making it from phone screen step to the on-site interviews step then you may conclude that maybe too many people are getting into the phone screen stage or maybe the people doing the phone screen are just being too tough and you should let more people get to the onsite interview stage. This type of data science is already having an impact on recruiting. What about machine learning projects? Well, one of the steps of recruiting is to screen a lot of resumes to decide who to reach out to you. So, you may have to look at one resume and say, "Yes, let's email them", look at a different one to say, "No, let us not move ahead with this candidate." Machine learning is starting to make its way into automated resume screening. Does raise important ethical questions such as making sure that your AI software does not exhibit undesirable forms of bias and treats people fairly, but machine learning is starting to make inroads into this and I hope can do so while making sure that the systems are ethical and fair. In the final week of this AI For Everyone course, you'll also learn more about the issues of fairness and ethics in AI. What if you work in marketing? One of the common ways to optimize the performance in website is called AB testing, in which you launch two versions of website. Here version A has a red button, version B has a green button and you measure which websites causes people to click through more. So with this type of data, a data science team can help you gain insights and suggests hypotheses or actions for optimizing your website. How about machine learning and marketing? Today a lot of websites will give customized product recommendations to show you the things you're most likely to want to buy and this actually significantly increases sales on these websites. For example, a clothing website after seeing the way I shop after while, will hopefully just recommend blue shirts to me because that's frankly pretty much the only type shirt I ever buy, but maybe other customers will have more diverse and more interesting recommendations than mine. But today these customized product recommendations actually drive a large percentage of sales on many large online e-commerce websites. One last example from a totally different sector. Let's say you work in agriculture. Maybe you're a farmer working on the light industrial farm, how can data science help you? Today farmers are already using data science for crop analytics, where you can take data on the soil conditions, the weather conditions, the presence of different crops in the market and have data science teams make recommendations to what to plant, when to plant so as to improve use while maintaining the condition of the soil on your farm. This type of data science is and will play a bigger and bigger role in agriculture. Let's also look at the machine learning example. I think one of the most exciting changes to agriculture is precision agriculture. Here's a picture that I took on a farm with my cell phone. On the upper right is a cotton plants and shown in the middle is a weed. With machine learning, we're starting to see products that can go onto the farms, take a picture like this and spray a weed killer in a very precise way just onto the weeds so that it gets rid of the weed but without having to spray an excessive amounts of weed killers. This type of machine learning technology is both helping farmers increase crop yields while also helping to preserve the environment. In this video, you saw how all of these job functions, everything from sales, recruiting to marketing to manufacturing to farming agriculture, how all of these job functions are being affected by data, by data science and machine learning. It seems like there's a lot of different things you could do with AI. But how do you actually select a promising project to work on? Let's talk about that in the next video \ul\fs48\par
How to choose an AI project (Part 1) \par
\ulnone\fs36 If you want to try your hand at an AI project, how do you select a worthwhile project to work on? Don't expect an idea to naturally come overnight. Sometimes it happens, but sometimes it also takes a few days or maybe a few weeks to come up with a worthy idea to pursue. In this video, you see a framework for brainstorming potentially exciting AI projects to pursue. Let's say you want to build an AI project for your business. You've already seen that AI can't do everything, and so there's going to be a certain set of things that is what AI can do. So let's let the circle represent the set of things that AI can do.\par
0:42\par
Now, there's also going to be a certain set of things that is valuable for your business. So let's let this second circle represent a set of things that are valuable for your business. What you would like to do is try to select projects that are at the intersection of these two sets, so you select projects hopefully that are both feasible, that can be done with AI, and that are also valuable for your business. So AI experts will tend to have a good sense of what is and what isn't in the set on the left. And domain experts, experts in your business, be it sales and marketing, or agriculture or something else, will have the best sense of what is actually valuable for your business. So when brainstorming projects that AI can do and are valuable for your business, I will often bring together a team comprising both people knowledgeable of AI, as well as experts in your business area to brainstorm together. So that together they can try to identify projects at the intersection of both of these two sets. So sometimes we also call these cross-functional teams, and that just means a team that includes both AI experts, as well as domain experts, meaning experts in your area of business. When brainstorming projects, there's a framework that I've used with a lot of companies that I found to be useful. So let me share with you three principles or three ideas for how you can have a team brainstorm projects. First, even though there's been a lot of press coverage about AI automating jobs away, and this is an important societal issue that needs to addressed, when thinking about concrete AI projects, I find it much more useful to think about automating tasks rather than automating jobs. Take call center operations, there are a lot of tasks that happen in a call center. Ranging from people picking up the phone to answering phone calls to replying to emails, to taking specific actions, such as issuing a refund on behalf of a customer request. But of all of these tasks that employees in a call center do, there may be one, call routing or email routing, that maybe particularly amenable to machine learning automation. And it's by looking at all these tasks that the group of employees do and selecting one that may allow you to select the most fruitful project for automation in the near term. Let's look at another example, the job of a radiologist. There's been a lot of press about how AI my automate radiologists' jobs, but radiologists actually do a lot of things. They read x-rays, that's really important, but they also engage in their own continuing education. They consult with other doctors, they may mentor younger doctors, some of them also consult directly with patients. And so it's by looking at all of these tasks that a radiologist does that you may Identify one of them, let's say AI assistance or AI automation for reading x-rays, that allows you to select the most fruitful projects to work on. So what I would recommend is, if you look at your business, think about the tasks that people do, to see if you can identify just one of them, or just a couple of them, that may be automatable using machine learning. When I'm meeting CEOs of large companies to brainstorm AI projects for the company, a common question I'll also ask is, what are the main drivers of business value? And sometimes finding AI solutions or data science solutions to augment this can be very valuable. Finally, a third question that I've asked that sometimes let to valuable project ideas is, what are the main pain points in your business? Some of them could be solved with AI, some of them can't be solved with AI. But by understanding the main pain points in the business, that can create a useful starting point for brainstorming AI projects as well. I have one last piece of advice for brainstorming AI projects, which is that you can make progress even without big data, even without tons of data. Now don't get me wrong, having more data almost never hurts, other than maybe needing to pay a bit more for disk space or network bandwidth to transmit and store the data, having more data almost always is only helpful. And I love having lots of data. It is also true that data makes some on businesses, like web search, defensible. Web search is a long tail business, meaning that there are a lot of very, very rare web queries. And so seeing what people click on when they search on all of these rare web queries does help the leading web search engines have a much better search experience. So big data is great when you can get it, but I think big data also sometime over-hyped, and even with a small dataset, you can still often make progress. Here's an example, let's say you're building a automated visual inspection system for the coffee mug. So you want to automatically detect that the coffee mug on the right is defective. Well, if you had a million pictures of good coffee mugs and defective coffee mugs, it'd be great to have that many examples of pictures of good and bad coffee mugs to feed your AI system. But I hope you have not manufactured 1 million defective coffee mugs, because that feels like a very expensive thing to have to throw away. So sometimes with as few as 100, or maybe 1,000, or sometimes maybe as few as 10, you may be able to get started on the machine learning project. The amount of data you need is very problem dependent, and speaking with an AI engineer or AI expert would help you get better sense. There are some problems where 1,000 images may not be enough, where you do need big data to get good performance. But my advice is, don't give up just because you don't have a lot of data to start off with. And you can often still make progress, even with a small dataset. In this video, you saw a brainstorming framework, and a set of criteria for trying to come up with projects that hopefully can be doable with AI, and are also valuable for your business. Now, having brainstormed a list of projects, how do you select one or select a small handful to actually commit to and work on? Let's talk about that in the next video. \par
\ul\fs48 How to choose an AI project (Part 2) \par
\ulnone\fs36 Maybe you have a lot of ideas for possible AI projects to work on. But before committing to one, how do you make sure that this really is a worthwhile project? If it's a quick project that might take you just a few days maybe just jump in right away and see if it works or not, but some AI projects may take many months to execute. In this video, I want to step you through the process that I use to double-check if a project is worth that many months of effort. Let's take a look. Before committing to a big AI project, I will usually conduct due diligence on it. Due diligence has a specific meaning in the legal world. But informally, it just means that you want to spend some time to make sure what you hope is true really is true. You've already seen how the best AI projects are ones that are feasible. So, it's something that AI can do, as well as valuable. We really want to choose projects to that the intersection of these two sets. So, to make sure a project is feasible, I will usually go through technical diligence, and make sure that the project is valuable, I will usually go through a business diligence process. Let me tell you more about these two steps. Technical diligence is the process of making sure that the AI system you hope to build really is doable, really is feasible. So, you might talk to AI experts about whether or not the AI system can actually meet the desired level of performance. For example, if you are hoping to build a speech system that is 95 percent accurate, consulting of AI experts or perhaps reading some of the trade literature can give you a sense of whether this is doable or not. Or if you want a system to inspect coffee mugs in a factory and you need your system to be 99 percent accurate. Again, is this actually doable with today's technology? A second important question for technical diligence is how much data is needed to get to this desired level of performance, and do you have a way to get that much data. Third, would be engineering timeline to try to figure out how long it will take and how many people it will take to build a system that you would like to have built. In addition to technical diligence, I will often also conduct business diligence to make sure that the project you envision really is valuable for the business. So, a lot of AI projects will drive value through lowering costs. For example, by automating a few tasks or by squeezing more efficiency onto the system. A lot of AI systems can also increase revenue. For example, driving more people to check out in your shopping cart or you may be building an AI system to help you launch a new product or a new line of business. So, business diligence is the process of thinking through carefully for the AI system that you're building such as a speech recognition system that's 95 percent accurate or a visual inspection system that's 99.9 percent accurate, would allow you to achieve your business goals. Whether your business goal is to improve your current business or to even create brand new businesses in your company. When conducting business diligence, I'll often end up building spreadsheet financial models to estimate the value quantitatively such as estimate how many dollars are actually saved or what do we think is a reasonable assumption in terms of entries revenue, and to model out the economics associated with a project before committing to many months of effort on a project. Although not explicitly listed on this slide, one thing I hope you also consider doing as a third type of diligence which is ethical diligence. I think there are a lot of things that AI can do that will even make a lot of money, but that may not make society better off. So, in addition to technical diligence and business diligence, I hope you also conduct ethical diligence and make sure that whatever you're doing is actually making humanity and making society better off. We'll also talk more about this in the last week of this course as well. As you're planning out your AI project, you also have to decide do you want to build or buy? This is an age old question in the IT world and we're facing this question in AI as well. For example, hardly any companies build their own computers these days. They buy someone else's computers and hardly any companies build their own Wi-Fi routers, just buy a commercial Wi-Fi router. How about machine learning and data science? Machine learning projects can be in-house or outsource. I've seen both of these models used successfully. Sometimes if you outsource a machine learning project, you can have access much more quickly to talent and get going faster on a project. It is nice if eventually you build your own in-house AI team and can also do these projects in house. You'll hear more about this when we talk about AI translation playbook in greater detail next week. Unlike machine learning projects though, data science projects are more commonly done in-house. They're not impossible to outsource, you can sometimes outsource them, but what I've seen is that data science projects are often so closely tied to your business that it takes very deep day-to-day knowledge about your business to do the best data science projects. So, just as a percentage, as a fraction, I see data science projects in-house more than machine learning projects. Finally, in every industry some things will be industry standard and you should avoid building those. A common answer to the build versus buy question was, build the things that are going to be quite specialized to you or completely specialized to you or they'll allow you to build a unique defensible advantage, but the things that will be industry standard probably some other company will build and it'll be more efficient for you to just buy it rather than build it in-house. One of my teams have a really poetic phrase which is, "Don't sprint in front of a train," and what that means is, if this is a train running on a railway tracks and that's the small chimney with the puff of smoke. What you don't want to do is to be the person or the engineer trying to sprint faster and faster ahead of the train. The train is the industry standard solution, and so, if there's a company maybe a startup, maybe a big company or maybe an open-source effort that is building an industry standard solution, then you may want to avoid trying to run faster and faster to keep ahead of the train. Because even though you could sprint faster in the short term, eventually the train will catch up and crash someone trying to sprint in front of a train. So, when there's a massive force of an industry standard solution that is been built, you might be better off just embracing an industry standard or embracing someone else's platform rather than trying to do everything in-house. We all live in a world of limited resources, limited time, limited data, limited engineering resources, and so, I hope you can focus those resources on the projects with our most unique and will make the biggest difference to your company. Through the process of technical diligence as well as business diligence, I hope you can start to identify projects that are potentially valuable or that seem promising for your business. If the project is a big company, maybe it'll take many months to do. It's not unusual for me to spend even a few weeks conducting this type of diligence before committing to a project. Now, say you found a few promising projects, how do you engage with an AI team? How do you work with an AI team to try to get these projects done? Let's talk about that in the next video \par
\ul\fs48\par
\ulnone\fs32\par
 \fs22\par
}
 