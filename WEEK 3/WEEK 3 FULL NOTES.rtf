{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\f0\fs48  \fs72 BUILDING AI IN YOUR COMPANY \par
\fs32 Welcome back. In the last two weeks you learned what is AI, and how to build an AI project. This week we'll look at the projects we talked about already, and talk about how projects fit in the context of a company. Whether it's a for-profit, non-profit, or even within a government entity. For the sake of concreteness, I'll talk about building AI for companies will equally apply, no matter what type of organization you're in. Now, in case some of what you hear this week sounds like CEO level talk, don't be intimidated. This is actually useful for everyone to know, the ones that hope, your company will help your organization Improve using AI. And it does take maybe two or three years for a company to become good at AI. To embrace not just one AI project but a sequence of valuable AI projects and become much more effective. But what I hope to do this week is help you paint a vision for where an organization can go over a longer period of time like that. But also end the week with very concrete short steps you can take right away. So let's get started. In detail, these are the topics you'll see this week. First is case studies of complex AI products. So rather then a single machine learning or data science module like what you saw last week. This week you'll see you how multiple modules can come together to build a much more complex AI product such as a smart speaker or a self driving car. You also learn what are the major roles in an AI team. So if ever you think your company can build a large AI team with maybe many dozens or maybe even hundreds of people, what are the things these people will do? We'll start to paint a roadmap for what building an AI team might look like. Third you also learn about the AI transformation playbook of how to help your company become good at AI. Where it goes beyond doing one or two valuable projects, but about making a whole company good at AI and hopefully much more effective and valuable as a result. Finally, whereas some of these steps may take a small number of years to complete. We'll wrap this weeks videos with concrete suggestions on how you can take your first step, right away, toward building AI in your company. Beyond these major topics, we'll also have a couple of optional videos at the end, where you see a survey of major AI application areas and techniques.\par
2:24\par
So, after this week's videos, I hope you have a good vision of how you can help your company use AI and also have first steps you can take right away. Lets get started by going on to the next video. \par
\fs52 CASE STUDY SMART SPEAKER \par
\fs36 What does it feel like to work on a complex AI product, where isn't just using a single machine learning algorithm to map from A to B, but that learning algorithm is part of a bigger more complex project or product. I want to start it this week with two case studies of building complex AI products. First, building a smart speaker so that you can start to understand whether my feel like to maybe someday work on a complex AI product within your own company. Let's get started. Smart speakers and voice activated devices like these are taking the world by storm and if you don't already have one in your home, maybe you buy one someday. I'd like to go through a case study of how you would write AI software to get a smart speaker to respond to a verbal command such as "Hey device, tell me a joke." For this example, rather than using Alexa, or Okay Google, or Hey Siri, or Hello Baidu as the wake word or trigger word, to be more device agnostic, I'm just going to use "Hey device" as the trigger word or wake work. To wake up say a smart speaker and let's say you wanted to tell you a joke. So how do you build a piece of AI software to understand a command like this and executes on it? These are the steps needed to process the command. There can be four steps. Step one is the trigger word or the wake word detection. The speaker uses a machine learning algorithm to input the audio clip and output. Did they just hear the wake word or the trigger word "Hey Device," so o plus 0 or one and once it hears the trigger word or wake word, once it hears "Hey device," it then has to perform step two, which is speech recognition. So what the software has to do is take the audio of what came after "Hey device" and map that to "Tell me a joke." This is also done with machine learning. Whereas, the first step here used an A to B mapping to just tell it that it hear the trigger word. This uses a different A to B mapping to map the audio to a text transcript of what you just said, which in this case is the four words tell me a joke. Now, the algorithm has to figure out what you actually want by saying these four words and so the third step is intent recognition. That means to take what have you said and to figure out what you actually wanted to do. So today's smart speakers have a limited set of commands such as they can tell a joke or they can tell the time. So you can say "Hey device what time is it." They can play music. They can sometimes help you make a phone call. They can tell you what's the weather, "Hey device, what's the weather tomorrow?" So what intent recognition does, is take the four words, the speech recognition's output, and use another piece of AI software, another A to B mapping that inputs those four words and outputs which of these five or other intents do you have. So in this implementation of a machine learning algorithm, the input A is the text transcript tell me a joke and the output B is which of these five types of commands did the user just utter. Of course, your smart speaker may be more understand even more commands than just these five, in which case B would be whichever of the five or 20 or 100 commands your smart speaker knows how to execute. No matter how you ask the smart speaker to tell you a joke, hopefully, the intent recognition components will recognize your intent correctly. So that you can also say not just "Hey device, tell me a joke," but also "Hey device, do you know any good jokes" or "Hey device, tell me something funny." Turns out, there are lot of ways for you to ask a smart speaker for a joke and a well-designed intent recognition system should recognize most of them. Finally, now that your smart speaker has figured out that you really, really want to hear a joke, the last step is that there will be a software engineer that has written a piece of code to randomly select a joke and to play the joke back through the speaker. In other words, they'll execute a joke. Just for the record, my favorite joke is why are there so me shocking results in AI, because AI is the new electricity, shocking electricity, get it? Hope you enjoyed that. So, all right, and in seriousness, you can think of the four steps of the algorithm as these four steps, where the first step is trigger word detection, second step, speech recognition, then intent recognition, and then finally, execution of what are the command the user asked the smart speaker to execute. So the process of having four steps in an AI system like this or multiple steps, this is sometimes called an AI pipeline, where you have multiple AI components. Yes, it's possible machine learning components which process data one step after another and it would not be unusual to have say, four different teams in the company where each team focuses on one of the components of this AI pipeline. That's how we often organize projects within a large company. Let's now look at a more complex example. One of you issue a more complex commands like "Hey device, set timer for 10 minutes." These are the steps needed to process a command. First step, same as before is trigger word detection. So input an audio and just let me know when someone said the trigger word hey device. Then speech recognition, where you input the rest of the audio and transcribe the rest of the sound, the rest of the audio, set timer for 10 minutes and now, intent recognition has to input that texts and output that your intent is that you want to set a timer. One difference between set timer for 10 minutes compared to the earlier example of tell me a joke is that you need to know how long to actually set the timer for. So in the execution step, you actually need to do two things. One is extract the duration. That means, look at the text, set timer for 10 minutes and pull out the phrase that tells you how long to actually set the timer for and so if the user were to say "Hey device, let me know when 10 minutes is up" then this extract duration step would have to pull out again, the 10 minute phrase right there and of course, there are lots of ways to ask for a 10-minute timer. You can also say, let me know when 10 minutes are up or set an alarm for 10 minutes from now and hopefully, the intent recognition and extract duration components will both be robust enough to recognize that all of these are different ways of asking for a 10-minute timer. Finally, to execute the command, there should be a specialized software components in the smart speaker that can start a timer with a set duration and after it has extracted your intent and the duration, it just start the timer with that duration. So that the alarm goes off at the end of 10 minutes. Today's smart speakers have many functions. Other than the two we've talked about of telling jokes and setting a timer, here are some other functions that many smart speakers today can execute and the key steps of executing these commands are trigger word or the wake word detection, speech recognition to transcribe the text in the command, intent recognition to figure out which of these functions or which of these commands you want to execute, and then a specialized program to execute whichever command you uttered. One of the challenges of the smart speaker world is that, if you want your smart speaker to have this many different functions say, 20 different functions, then you do need software engineering teams to write 20 specialized pieces of software. One to play music, one to set the volume, one to make calls, one to ask what's the current time, one to convert units like from teaspoons to tablespoons, or to answer very simple questions, and on and on. So it's actually quite a lot of work to write all of these specialized programs to execute all the different commands you might want to execute in step four and smart speakers today actually do so many things that is difficult for many users to cue straight in their heads exactly what they can and cannot do. So many smart speaker companies have been investing a lot in user training to try to let users know what are the things that smart speakers can do because on one hand, they can't do everything. There are lot of things you can't ask smarts speakers to do such as please call all of my three friends and see when all of them are able to meet for dinner. So it's been an ongoing processes of smart speaker companies to explain to users what they can and cannot do. Nonetheless, with what they can do using voice to command these speakers is making life much more convenient for many people. I hope this video gave you a sense of what it takes to build a complex AI product such as a smart speaker. In order to help you better understand how these complex products work, let's go on to see a second case study of how to piece together multiple AI components to build a self-driving car. Let's go on to the next video.\fs52   \par
Case study: Self-driving car \par
\fs36\par
One of the most exciting products of the AI era is the self-driving car. Self-driving cars are also one of the most mysterious things you hear about in AI these days. In this video what I want do is share with you a somewhat simplified description of a self-driving car so that you understand how you can piece together multiple AI components in order to build these amazing things. Let's get started. These are the key steps for deciding how to drive your self-driving car. The car will take as input various sensors such as pictures of what's in front of the car or to the sides or behind, as well as maybe radar or Lidar meaning laser sensor readings. Given these inputs of a picture and maybe other things, it then has to detect other cars. So given that, hopefully, you'll figure out there's a car there, as well as where are the pedestrians, because we want to avoid other cars as well as avoid pedestrians. Both car detection and pedestrian detection can be done with machine learning using input/ output or A to B mappings that takes as input the picture and maybe radar and Lidar, sends the inputs and tells us where are the other cars and pedestrians. Finally, now that you know where are the other cars and where are the pedestrians, you can then feed this information into another specialized piece of software, it's called a motion planning piece of software that plans the motion or plans the path that you want your car to take, so that you can make progress to your destination while avoiding any collisions. Once you've planned out the motion for your car, you can then translate that into specific steering angle for your steering wheel and acceleration and brake commands, so how much to step on the gas pedal, and how much to brake in order to get your car to move at the desired angle as well as speed. Let's look at the three key steps of car detection, pedestrian detection, and motion planning in more detail. Car detection uses supervised learning. So, you've already seen how a learning algorithm can take as input pictures like these and output the detected cars. For most self-driving cars rather than using only a front-facing camera, so a camera that looks forward, also often use cameras that look to the left, to the right as well as to the back so it can detect cars not just to the front but all around it. This is usually done using not just cameras but other sensors as well such as radar and Lidar. Next is pedestrian detection, and using a pretty similar type of sensors as well as techniques, self-driving cars can detect pedestrians. Finally, I briefly mentioned a motion planning step. So, what is that? Here's an example. Let's say you're driving your car and there's this light blue car in front of you. The motion planning software's job is to tell you what is the path, shown here in red, you should drive in order to follow the road and not have an accident. So the motion planning software's job is to output the path as well as speed at which you should drive your car in order to follow the road, and the speed should be set so that you don't run into the other car, but you also drive at a reasonable speed on this road. Here's another example. If there's this gray car parked on the right side of the road, so you want to overtake this stopped car, then the motion planning software's job is to plot a path like that to let you veer a little bit to the left and safely overtake a stopped car. So far I've given a rather simplified description of self-driving as comprising mainly these three components. Let's look at a bit more detail of how an actual self-driving car might work. This is a picture you've seen so far. Input image, radar, or Lidar, sensor readings into car detection and pedestrian detection, and that is then fed to motion planning to help you select your path and speed. Now in a real self-driving car, you would usually use more than just cameras, radar, and Lidar. Most self-driving cars today will also use GPS to sense its position as well as accelerometers, sometimes called an IMU, this means accelerometers, and gyroscopes as well as a map because we know that cars are more likely to be found on a road, pedestrians are more likely to be found on sidewalks, although they are sometimes found on the road as well. All this is usually additional information that's fed in to detect cars and pedestrians as well as other objects we'll talk about in a second. Rather than just detecting cars and pedestrians, in order to drive safely you also need to know where these cars and pedestrians are going in the future. So, another common component of self-driving cars is trajectory prediction, where there's another AI component that tells you not just the cars and pedestrians you found, but also where they're likely to go in the next few seconds, so you can avoid them even as they're moving. To drive safely requires more than just navigating other cars and pedestrians. You also need to know where are the lanes so you might detect lane markings. If there's a traffic light you also need to figure out where's the traffic light, and is it showing a red, yellow, or green signal. Sometimes there are other obstacles, such as unexpected traffic cones or maybe there's a flock of geese walking in front of your car. That needs to be detected as well so that your car can avoid even other obstacles than cars and pedestrians. On a large self-driving car team, it would not be that unexpected to have a team or maybe a few people working on each of the boxes shown here in red, and it's by building all of these components and putting them together that you can build a self-driving car. As you can tell both from this rather complex example of an AI pipeline, as well as the early example of the four-step AI pipeline for the smart speaker, sometimes it takes a team to build all of these different components of a complex AI product. What I'd like to do in the next video is share with you what are the key roles in large AI teams. If you're either a one-person or small AI team now, that's okay, but I want you to have a vision of what building a large AI team, maybe in the distant future, might look like. Let's go on to the next video. \par
\fs52 Example roles of an AI team\par
 \fs36 You saw from the last two videos that some AI products may require a large AI team, maybe you have a 100 engineers or sometimes many more than a 100 to build. What I would like to do in this video is share with you the typical roles and responsibilities of a large AI team like this so you can better understand the types of work needed to build these complex AI products. Now, even if you will be working in a much smaller team, maybe a one or two or five person team for the foreseeable future, I hope this video will still be useful to you because I hope it'll give you a sense of the different types of work that an AI team might need to do even if you end up executing on this type of work with a much smaller team. One caveat, because AI is evolving so fast, the job titles and various responsibilities are not yet a 100 percent defined, and they are a little bit different across different companies. So, your company may use their job titles differently than what I'm presenting here, but I want to share a view how job tittles are often used in many companies, so that if you're someday building up your own AI team, we hear about these roles you would have at least some deeper understanding of what these job titles mean. So, let's get started. Many AI teams will have Software Engineers in them. So, for example, for the smart speaker we needed to write specialized software to execute on the joke or to set a timer or to answer questions about today's weather. So, those are traditional software engineering tasks. Or you're building a self-driving car to make sure that your self-driving car software is reliable and doesn't crash. These are software engineering tasks. So, it's not uncommon for AI teams to have enlarged fractions sometimes 50 percent, sometimes much much much more than 50 percent of Software Engineers in them. The second common role is the Machine Learning Engineer. So, Machine Learning Engineer might write the software responsible for generating the A to B mapping or for building other machine learning algorithms needed for your product. So, they might gather the data of pictures of cars and positions of cars, train a neural network or train a deep learning algorithm and work iteratively to make sure that the learning algorithm is giving accurate outputs. Another role that you sometimes hear about is the Machine Learning Researcher. The typical row of the Machine Learning Researcher is to extend the state of the art in machine learning. Machine learning and AI more broadly are still advancing rapidly. So, many companies for profit and non-profit, more have Machine Learning Researchers responsible for extending the state-of-the-art. Some Machine Learning Researchers will publish papers, but many companies also have Machine Learning Researchers that do research, but are less focused on publishing. There's one other job title that's sort of in-between these two which is the Applied Machine Learning Scientists, which live somewhere between Machine Learning Engineer and Machine Learning Researcher. The Machine Learning Scientists kind of does a bit of both. They are often responsible for going to the academic literature or the research literature and finding the steady VR techniques and finding ways to adapt them to the problem they are facing such as how to take the most cutting edge, trigger where the wicker detection algorithm and adapt that to your smart speaker. Let's look at some more of those. Today, there are a lot of Data Scientists working in industries. The role of Data Scientist is not very well defined and the meaning is still evolving today. I think one of the primary responsibilities of Data Scientists is to examine data and provide insights, as well as to make presentations to teams or the executives in order to help drive business decision-making. There also Data Scientists today doing other tasks. So, there are also Data Scientists today whose work looks more like the Machine Learning Engineers, they are described on the previous slide. The meaning of this job title is still evolving today. With the rise of big data, there are also more and more Data Engineers whose main role is to help you organize your data, meaning, to make sure that your data is saved and is easily accessible, secure and cost-effective way. So, why is saving data such as a big deal? Can't you just save them in a hard disk and be done with it. In some companies, data volumes have gotten so big. There's actually quite a lot of work to manage them. To give you a sense of the scale, in computer science one MB stands for one megabytes and so a typical song on your music player like a typical MP3 file may be a few megabytes, say five megabytes would be a non unusual MP3 file size. A 1,000 megabytes is called a gigabyte. A million megabytes is called a terabyte and a billion megabytes is called a petabyte. With today's hard disk sizes, saving a few megabytes is not a big deal. It's just like a mere MP3 file, but storing a 1,000 megabytes, also called a gigabyte, starts to be a bit slower. A typical hour-long movie that you stream over the internet maybe above gigabytes. So, that's quite a lot of data. To give you a sense of the scale, a self-driving car may collect multiple gigabytes of information every single minute of operations. So, it's as if every minute the self-driving car generates enough data to store multiple hour-long movies. So, self-driving cars actually generate lot of data and saving the data for many days or weeks or months or years of operation starts to require serious data engineering. A terabyte is 1,000 times bigger than that and a petabyte is yet another 1,000 times bigger than that of that teams that were responsible for saving several petabytes of information per day, but other than pretty large internet companies is not that common for a company to generate multiple petabytes of information per day. As you move down this scale to bigger and bigger datasets, it becomes harder and harder to make sure that data is stored in a easy accessible, secure and cost-effective way, which is why Data Engineers become more and more important. Finally, you'll also hear some people referred to AI Product Managers whose job is to help decide what to build. In other words, they help to figure out what's feasible and valuable. Traditional Product Manager's job was already to decide what to build as well as sometimes some other roles, but the AI Product Manager now has to do this in the AI era and they're needing new skill sets to figure out what's feasible and valuable in light of what AI can and cannot do today. Because the field of AI is still evolving, none of these job titles are completely nailed down in the stone and different companies will use these job titles somewhat differently. But I hope this gives you a sense of some of the different types of work needed to build very complex AI products as well as where some of the job titles are evolving. To finish though, I want to re-emphasize that you can get started with a small team. You don't need a 100 people to do most AI projects. So, whether you just have one Software Engineer working with you, or just a single Machine Learning Engineer, or just a single Data Scientists, or maybe nobody, but yourself, if either you or an engineer working with you has taken some online courses on machine learning or deep learning or data science, that's often enough for you by yourself or for you and an engineer to start looking at some smaller volumes of data, start drawing some conclusions or start trading some machine learning models to get going. So, even though I've tried to paint here a vision for what a large AI team might look like, even if you have only a small AI team, could be nobody by yourself, I would still encourage you to get started and start exploring what the projects you could do. In this video, you saw what an AI team might look like, but when you look at a bigger company, an AI team doesn't live in isolation. So, how does an AI team fit into a bigger company to help the whole company become good at AI? You might remember that in week one I briefly alluded to an AI transformation playbook, which is a roadmap for you to help a company, to help maybe a great company become great at AI. Now that you've learned what is AI, how to do AI projects and even what AI teams in companies and the competency AI projects and coms may look like, let's return to their AI transmission playbook and go much deeper into the individual steps of the playbook so that you can understand what it takes to help a company over maybe a small number of years become good at AI and hopefully become much more valuable and much more effective along the way. Let's go into the AI transmission playbook in the next video\par
\fs52  AI Transformation Playbook (Part 1)\par
\fs36 How can you help your company become good at AI? Based on my experience, starting leading the Google Brain Team as well as Baidu's AI group which were respectively the leading forces for helping Google and Baidu become good and deeper in AI. I've spent a lot of time thinking about what it takes to help a great company become a great AI company and I wound up writing an AI transformation playbook to help other countries on this journey. In this video, I'd like to share with you the details of the AI transformation playbook so that you can better understand what it might take for your company to become good at AI. In case some this seems like things that only CEO's need to know, I think that that's not the case, it's useful for everyone in the company to understand whether it might take for your work to impact not just a few projects but maybe have a bigger impact on the company as a whole. Let's get started. Here are the five steps of the AI transformation playbook. We'll dive into greater detail in a little bit but briefly, step one is for your company to execute pilot projects to gain momentum. Start to know what it feels like to work on AI projects. Step two, is to build an in-house AI team. Step three, is to provide broad AI training, not just the engineers but to many levels within a company including executives. Step four, is to develop your AI strategy and step five, is to develop internal and external communications about your company and AI. The way your company will execute the steps may not be totally sequential and so the different steps may overlap. But this numbering gives a maybe rough sense of the order in which I think you could do these steps. In this video, we will go in greater depth on the first three of these three steps and the next video we'll cover steps for and five. Let's start with step one, executing pilot projects to gain momentum. If you want your company to gain momentum with AI, the most important consideration for the initial project or projects, is for them to be successful rather than necessarily be the most valuable. For example, when I was leading the Google Brain Team, there was still a lot of skepticism at that time about deep learning. So, my first internal customer was Google's speech recognition team and speech recognition is nice to have this is useful but it's actually not the most important or valuable project for the company's bottom lines. It's not as valuable as, for example web search or online appetizing. But by having my team make the Google Speech team more successful, it started the fly wheel turning helps it get momentum because then the peers and the other teams that are brothers and sisters the speech team started to see my team make the speech team more successful and so they also started to gain favor in AI and wanted to work with us. So, my second internal customer was the Google Maps Team to improving the quality of the maps data using deep learning and with the first second successes. I then started other conversations with the online advertising team for example. So, when selecting your initial project, try to pick something that you think has a good chance of success. They can start to fly wheel turning even if it may not be the most valuable project that you could eventually do for the company. Because the goal of the first few projects is just to gain momentum is also now you see if you can pick something that can show traction within six to 12 months. So you can start to fly wheel turning quickly. Finally, your first one or two pilot projects can be either in-house or outsource. If you do not yet have a large in-house AI team, might be possible, might even be advisable to outsource some or all of your first couple of AI projects in order to get more expertise in house and to let you start building that momentum faster. Now, beyond a certain point, you will need your own in-house AI team to execute a long-term sequence of maybe many dozens of AI projects. So, step two is to build an in-house AI team. A lot of companies are organized like this, where, there's a CEO and multiple business units which I'm going to abbreviate with BU that reports up to the CEO. So, what I recommend for most companies is to build a centralized AI team and then to take the talent in the matrix organization and two matrix them into these different business units to support their work. Why essentialize the AI? Let's take an example. Maybe this unit is your gift card business unit, and the BU leader may be great at whatever he or she does. They may be greater than gift card business. But unless he or she is knowledgeable AI and knows how to build retain and managing AI team, it may be very difficult for that business unit leader to hire and retain an appropriately manage their own AI talent. So, in that case, I think you also successfully much higher if you find that AI team leader that can be responsible for consistent company wise standards for recruiting, retention. Have essentialized AI team to give the team the community to talk to each other about how AI applies to your business radical. It may be more efficient to take the AI talent in your centralized AI unit and matrix them into the gift card business unit so that your AI talent can work together with the gift card domain experts in order to develop interesting AI projects together. One other responsibility for the AI unit, is to build a company wide platforms. If there are software platforms or other tools or data infrastructure that could be useful for the whole company, then a single business unit may not have the resources or the incentive to build these company-wide platforms and resources that can support the whole company but essentialized AI team maybe help built these company wide tools or platforms that can help multiple business units. Finally, this new AI business unit can be under the CTO, the CIO, the chief data officer or the Chief Digital Officer or it could also be under a new chief AI officer. The CAIO chief AI officer is a role that I'm seeing more and more often in different companies but if some other senior executive has the right skill set, they could also manage the AI unit. Finally, one last recommendation, which is that, I think it is hopeful if to get the AI units started the company or the CEO provides funding to build at the AI unit rather than required AI unit to get funding from the business units. Eventually, after the initial investment and after the initial ramp up, the AI unit will have to show his value that is creating for the business units but having CEO inject funding at the outset so they can get going, will often help you get that initial momentum much faster. In addition to building an in-house AI team, I also recommend that you provide broad AI training. Now, for accompany that become good at AI, is not just that you need engineers to know AI, you need multiple people at multiple levels of the company to understand how AI interacts with their roles. For example, for executives and senior business leaders, I recommend that they learn what AI can do for your enterprise, that they learned the basics of these of AI strategy and they learned enough about AI to make resource allocation decisions. So, how much training should executives senior business leaders receive? I think that numbers of hours of training is not a very good way to measure training but with that caveat, I think you can deliver a lot of this training with maybe four hours or so of training. Leaders of divisions work on AI projects also need to know how to interact in their role with AI. I think these leaders would need to understand how to set project directions. So how the conduct technical and business diligence how to make resource allocation decisions at the division level as well as how to track and monitor progress of AI projects. So, this have a training I think would take at least 12 hours. Although, again number of hours is not a great metric for tracking how much are they earning. Finally, many companies are hiring AI talent from outside but I will also not underestimate the importance and the impact of training of your existing engineering workforce with AI skills for a software engineer to become proficient at AI does take a while so plan for maybe at least a 100 hours of training. But I'm seeing many companies provide training to help engineers learn to build and ship AI software to gather and managed data as was helped them become effective at executing on specific AI projects. The world today does not have nearly enough AI engineers and so in-house training is a key part of many companies building up of their in-house AI capabilities. Finally, how do you get all this training done? Thanks to the rise of online digital content, ranging from of course, online courses to also books and YouTube videos and blog posts. There is a lot of great content online about all of these subjects and I think a good CLO should work of experts to curate this type of content and motivated teams to complete these learning activities rather than necessarily create contents which is much more expensive thing to do. So steps one to three of the AI transmission favor. Okay, I hope that your company will be able to start to execute an initial projects, build the team, provide the training and really start to get a lot of momentum going in terms of helping you accompany you become more valuable or more effective using AI. Looking at the broader picture, AI also affects company strategy and how you align different stakeholders including investors, employees, customers with this transformation as a company. Let's go on to the next video to talk about AI strategy. \par
\fs52 AI TRANSFORMATION PLAY BOOK 2 \par
\fs36 In the last video, you learned how to execute pilot projects to gain momentum for the in-house AI team and provide broad AI training. But you want your business, not just gain momentum in the short-term using AI, but in the long term be a very valuable and maybe even defensible business. What can you do? Let's talk about AI strategy as well as perhaps important for some companies, internal and external communications relative to AI. To recap, this is the five-step AI transformation playbook, and in this video, we'll dive more deeply into these final two steps. Step four of the AI transmission playbook is to develop an AI strategy, which, I hope for you may mean to leverage AI to create an advantage specific to your industry sector. One unusual part of this playbook is that developing the AI strategy is step four not step one. When I shared this with many CEOs consistent request of please feedback ago was, can you please put the strategy as step one? Because I want to figure out what is my company strategy, then I want to find the resources, and then execute on the strategy. But I've found that companies that tried to define the strategy as step one, before getting your feet wet, before trying out AI knowing what a feasibility AI project. Companies like that tend to end up with sometimes very academic strategies that are sometimes not true to life. So, for example, I've seen some CEOs copy and paste newspaper headlines into this strategy. We read that data is important, he say, "My strategy is to focus on collecting a lot of data, but for your company, that data may or may not be valuable, and may or may not be a good strategy for your company. So, I tend to recommend to companies to start the other steps first, execute the pilot projects. Start building a little bit of a team. Start providing some training, so that only after you understand AI and understand how it may apply to your business, that you then formulate your strategy. I think this will work much better for your company than if you tried to formulate an AI strategy, before your company including specifically the executive team has some slightly deeper understanding of what AI can and cannot do for your industry sector. In addition, you might consider designing a strategy that is aligned with the virtuous cycle of AI. Let me illustrate that with an example from web search. One of the reasons that web search is a very defensible business, meaning is very difficult for new entrants to compete with the incumbents with the existing large web search engines, is this: If a company has a better product, maybe a slightly better product, then that web search engine can acquire more users. Having more users means that you collect more data because you get to observe what different users click on when they search for different terms, and that data can be fed into an AI engine to produce an even better product. So, this means that the company with somewhat better product, ends up with even more users, ends up with even more data, and does an even better product with this link being created by modern AI technology. It makes it very difficult for a new entrant to break into this self-reinforcing positive feedback loop, called the virtuous cycle of AI. Fortunately though, this virtuous cycle of AI can be used by smaller teams entering new verticals as well. So, I think today is very difficult to build a new web search engine to compete with Google, or Baidu, or Bing, or Yandex. But if you are entering a new vertical, a new application area where there isn't a entrenched incumbent, then you might really develop a strategy that lets you be the one to take advantage of this virtuous cycle. Let me illustrate with an example. There is a company called Blue River that was acquired by John Deere for over US$300 million, and Blue River makes agricultural technology using AI. So, what they did was build these machines that would be towed behind a tractor, in a big agricultural fields. This machine would take pictures of crops and figure out which is a crop and which is a weed, and use precision AI to kill off just the weeds, but not the crop. So, I knew some of the founders of Blue River while they were Stanford students are taking my class. So, to get the project started, they actually just use strap in his and sweat, they use their personal cameras and went out to a bunch of farms, and took a lot of pictures of crops in these agricultural fields. So, they started to collect pictures of heads of cabbage and weeds around the cabbage. Once they had enough data, starts off with a small data set, they could train a basic product. The first product, frankly wasn't that great. It was trained on a small data set, but it worked well enough to start to convince some farmers, some users to start to use their product, to tow this machine behind the tractor, in order to start killing weeds for the farmers. Once this thing was running around the farms through the process of taking pictures of heads of cabbage and killing off weeds, they naturally acquired more and more data. Over the next few years, what they did was they were able to enter this positive feedback loop, where having more data allows you to have a better product. Having a better product allows you to convince more farmers to use it. Having farmers use it allows you to collect more data. Over several years, entering a virtuous cycle [inaudible] , can allow you to collect a huge data asset that then makes your business quite defensible. In fact, at the time of acquisition, I'm pretty sure that they had a much bigger data asset of pictures of heads of cabbage lying on a field than even the large tech companies had, and does actually makes the business relatively defensible from even the large tech companies that have another web search data, but do not have nearly as many pictures as this company does of heads of cabbage lying in the agricultural fields. One more piece of advice. A lot of people think that some of the large tech companies are great at AI, and I think that's true. Some of the largest tech companies are very good at AI, but this doesn't mean you need to or should try to compete with these large tech companies on AI in general because lot of AI needs to be specialized or verticalized for your industry sector. So, for most companies to be in your best interest to build AI specialized for your industry, and to do great work in AI for your application areas, rather than try to compete or feel like you need to compete left and right with the large tech companies on AI over the place which just isn't true for most companies. Other elements of an AI strategy. We are going to live in an AI power world and the right strategy can help your company navigate these changes much more effectively. You should also consider creating a data strategy. Leading AI companies are very good at strategic data acquisition. For example, some of the large consumer facing AI companies will launch services, like a free email service, or a free photo-sharing service, or many other free services that do not monetize, but allows them to collect data in all sorts of ways that lets them learn more about you, so they can serve you more rather than adds, and thereby monetize their data in a way that is quite different than direct monetization about that product. The way you acquire data is very different depending on your industry vertical, but I have been involved in what feels like these multi-year chess games, where other corporate competitors and I are playing multi-year games to see who can acquire the most strategic data assets. You might also consider building a unified data warehouse. If you have 50 different data warehouses under the control of 50 different vice presidents, then is almost impossible for an AI engineer or for a piece of AI software to pull together all of this data in order to connect the dots. For example, if the data warehouse for manufacturing is in a totally different place than the data warehouse for customer complaints, then how can an AI engineer pull together this data to figure out, whether the things that might happen in manufacturing, that causes you to ship a faulty cell phone, that causes a customer to complain two months later. So, a lot of leading AI companies have put a lot of upfront effort into pulling the data into a single data warehouse because this increases the odds that a engineer or a piece of software, can connect the dots and spot the patterns between how a elevated temperature in manufacturing today may result in a faulty device that leads to a customer complaint two months in the future, thus letting you go back to improve your manufacturing processes. There are many examples of this in multiple industries. You can also use AI to create network effects and platform advantages. In industries with winner take all dynamics, AI can be a huge accelerator. For example, take the ride-sharing or the ride-hailing business. Today, companies like Uber, and Lyfts, and Ola, and DiDi, and Grab seemed like they have relatively defensible businesses because they are platforms that connect drivers with passengers, and is quite difficult for a new entrant to accumulate both a large rider audience and a large passenger audience at the same time. Social media platforms like Twitter and Facebook are also very defensible because they are very strong network effects where having a lot of people on one platform makes that platform more attractive to other people. So, it's very difficult for a new entrant to break in. If you are working in a business with these types of winner take all dynamics or winner take most dynamics, then if AI can be used to help you we're growing faster. For example, with a celebrating user acquisition, then that can pass translates into a much bigger chance that your company will be the one to succeed in this business vertical. Strategy is very comfy and industry and situation specific. So, it's hard to give strategy advisers completely general to every single company. But I hope that these principles give you a framework for thinking about what might be some key elements of an AI strategy for your company. Now, AI can also fit into more traditional strategy frameworks. For example, Michael Porter, many years ago have written about low cost and high value strategies. If your company has a low-cost strategy, then perhaps AI can be used to reduce costs for your business or, if your company has a high value strategy to deliver really, really valuable products with a higher cost, then you might use AI to focus on increasing the value of your products. So, AI capabilities can also help argument existing elements of a broader corporate strategy. Lastly, as you're building these valuable and defensible businesses, I hope that you also build only businesses that make people better off. AI is a superpower. This is a very powerful thing that you can do to build a great AI company, and so I hope that whatever you do, you do this only in ways that make humanity better off. The final step of the AI transmission playbook is to develop internal and external communications. AI can change a company and its products, and its important to communicate appropriately with the relevant stakeholders about this. For example, this may include investor relations to make sure that your investors can value your company appropriately as an AI company. Investor relations may also includes government relations. For example, AI is entering health care, which is a highly regulated industry because government has a legitimate need to protect patients, and so for AI to affect these highly regulated industries, I think is important for companies to communicate with government, and to work collaboratively with them in public-private partnerships to make sure that AI solutions bring people the benefits it can, while also making sure that governments can protect consumers and protect patients. So, this would be true for health care or be true for self-driving cars, it would be true for finance and many other AI industry verticals. If your products change, then consumer or user education will be important. AI talent is very scarce into this world and so, if you are able to showcase some of your initial successes that could really help with talent and recruiting. Finally, internal communications is also important if you're making a shift in your company, then many people internally may have worries, some legitimate and some less rational about AI and internal communications, so reassure people where appropriate can only be helpful. With these five steps, I hope it gives you a vision for how you might be the hope a company become good at AI. If you're interested in reading the detailed AI transmission playbook, you can also download it from this landing AI website. I hope you enjoyed these two videos on the AI transmission playbook. I've seen companies become much more value and much more effective by embracing and become good at AI, and I hope these ideas they hope you take a first step toward helping your company good at AI. Having said that, I have also seen many common pitfalls, the companies run into when trying to implement AI across the enterprise. Let's take a look at some of these common pitfalls in the next video so that hopefully, you can avoid them. Lets go on to the next video. \par
\fs52\par
\par
 \par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\fs22\par
}
 